{"ast":null,"code":"import axios from 'axios';\nconst url = 'http://localhost:3000/api/users';\n\nclass UserService {\n  //get posts\n  static getUsers() {\n    return new Promise((resolve, reject) => {\n      axios.get(url).then(res => {\n        const data = res.data;\n        resolve(data.map(user => ({ ...user,\n          createdAt: new Date(user.createdAt)\n        })));\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  static insertUsers(name, surname, password) {\n    return axios.post(url, {\n      name,\n      surname,\n      password\n    });\n  }\n\n  static deleteUsers(id) {\n    return axios.delete(`${url}${id}`);\n  }\n\n}\n\nexport default UserService;","map":{"version":3,"sources":["C:/Users/pekar/OneDrive/Pulpit/git/CarRent/client/src/UserService.js"],"names":["axios","url","UserService","getUsers","Promise","resolve","reject","get","then","res","data","map","user","createdAt","Date","catch","err","insertUsers","name","surname","password","post","deleteUsers","id","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,GAAG,GAAC,iCAAV;;AACA,MAAMC,WAAN,CAAiB;AACb;AACe,SAARC,QAAQ,GAAG;AACd,WAAO,IAAIC,OAAJ,CAAa,CAACC,OAAD,EAASC,MAAT,KAAoB;AACpCN,MAAAA,KAAK,CAACO,GAAN,CAAUN,GAAV,EAAeO,IAAf,CAAqBC,GAAD,IAAS;AACzB,cAAMC,IAAI,GAAGD,GAAG,CAACC,IAAjB;AACAL,QAAAA,OAAO,CACHK,IAAI,CAACC,GAAL,CAASC,IAAI,KAAK,EACd,GAAGA,IADW;AAEdC,UAAAA,SAAS,EAAE,IAAIC,IAAJ,CAASF,IAAI,CAACC,SAAd;AAFG,SAAL,CAAb,CADG,CAAP;AAMH,OARD,EASCE,KATD,CASQC,GAAD,IAAQ;AACXV,QAAAA,MAAM,CAACU,GAAD,CAAN;AACH,OAXD;AAaH,KAdM,CAAP;AAeH;;AACiB,SAAXC,WAAW,CAACC,IAAD,EAAMC,OAAN,EAAcC,QAAd,EAAuB;AACtC,WAAOpB,KAAK,CAACqB,IAAN,CAAWpB,GAAX,EAAe;AACjBiB,MAAAA,IADiB;AAEjBC,MAAAA,OAFiB;AAGjBC,MAAAA;AAHiB,KAAf,CAAP;AAKF;;AACiB,SAAXE,WAAW,CAACC,EAAD,EAAI;AAClB,WAAOvB,KAAK,CAACwB,MAAN,CAAc,GAAEvB,GAAI,GAAEsB,EAAG,EAAzB,CAAP;AACH;;AA5BY;;AA8BjB,eAAerB,WAAf","sourcesContent":["import axios from 'axios';\r\nconst url='http://localhost:3000/api/users';\r\nclass UserService{\r\n    //get posts\r\n    static getUsers() {\r\n        return new Promise ((resolve,reject) => {\r\n            axios.get(url).then((res) => {\r\n                const data = res.data;\r\n                resolve(\r\n                    data.map(user => ({\r\n                        ...user,\r\n                        createdAt: new Date(user.createdAt)\r\n                    }))\r\n                );\r\n            })\r\n            .catch((err)=> {\r\n                reject(err);\r\n            })\r\n            \r\n        });\r\n    }\r\n    static insertUsers(name,surname,password){\r\n       return axios.post(url,{\r\n            name,\r\n            surname ,\r\n            password\r\n        })\r\n    }\r\n    static deleteUsers(id){\r\n        return axios.delete(`${url}${id}`)\r\n    }\r\n}\r\nexport default UserService\r\n"]},"metadata":{},"sourceType":"module"}