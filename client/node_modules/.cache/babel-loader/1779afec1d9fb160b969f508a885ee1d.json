{"ast":null,"code":"import UserService from '../UserService';\nexport default {\n  name: 'UserComponent',\n\n  data() {\n    return {\n      name: '',\n      surname: '',\n      password: '',\n      error: ''\n    };\n  },\n\n  async created() {\n    try {\n      this.data = await UserService.getUser();\n    } catch (err) {\n      this.error = err.message;\n    }\n  },\n\n  methods: {\n    async CreateUser() {\n      await UserService.insertUsers(this.name, this.surname, this.password);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAmBA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,eAAe;AACbC,MAAI,EAAE,eADO;;AAEbC,MAAG,GAAK;AACN,WAAM;AACJD,UAAI,EAAC,EADD;AAEJE,aAAO,EAAC,EAFJ;AAGJC,cAAQ,EAAC,EAHL;AAIJC,WAAK,EAAC;AAJF,KAAN;AAMH,GATc;;AAUb,QAAMC,OAAN,GAAgB;AACd,QAAG;AACH,WAAKJ,IAAL,GAAU,MAAMF,WAAW,CAACO,OAAZ,EAAhB;AAAsC,KADtC,CAEA,OAAMC,GAAN,EAAU;AACR,WAAKH,KAAL,GAAWG,GAAG,CAACC,OAAf;AACF;AACD,GAhBY;;AAiBbC,SAAO,EAAC;AACR,UAAMC,UAAN,GAAkB;AAChB,YAAMX,WAAW,CAACY,WAAZ,CAAwB,KAAKX,IAA7B,EAAkC,KAAKE,OAAvC,EAA+C,KAAKC,QAApD,CAAN;AACF;;AAHQ;AAjBK,CAAf","names":["UserService","name","data","surname","password","error","created","getUser","err","message","methods","CreateUser","insertUsers"],"sourceRoot":"","sources":["C:\\Users\\pekar\\OneDrive\\Pulpit\\git\\CarRent\\client\\src\\components\\UserComponent.vue"],"sourcesContent":["<template>\n  <div class=\"container md-5\">\n    <div class=\"row justify-content-md-center\">\n      <div class=\"col-sm-4\">\n        <form>\n          <div class=\"mb-3\">\n    <input v-model='name'>\n  </div>\n    <input v-model='surname'>\n    <input type='password' v-model='password'>\n    <button @click=\"CreateUser\">Tap</button>\n        </form>\n        </div>\n    </div>\n  </div>\n\n</template>\n\n<script>\nimport UserService from '../UserService'\nexport default {\n  name: 'UserComponent',\n  data () {\n    return{\n      name:'',\n      surname:'',\n      password:'',\n      error:''\n  }\n},\n  async created() {\n    try{\n    this.data=await UserService.getUser();}\n    catch(err){\n      this.error=err.message;\n    }\n  },\n  methods:{\n  async CreateUser(){\n    await UserService.insertUsers(this.name,this.surname,this.password) \n  }\n  \n}\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style >\n\n</style>\n"]},"metadata":{},"sourceType":"module"}