{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, _toDisplayString($data.data), 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;AACOA,OAAK,EAAC;;;uBAAXC,oBAEM,KAFN,cAEM,CADNC,oBAAoB,KAApB,EAAoB,IAApB,EAAoBC,iBAAZC,UAAY,CAApB,EAAY;AAAA;AAAZ,GACM,CAFN","names":["class","_createElementBlock","_createElementVNode","_toDisplayString","$data"],"sourceRoot":"","sources":["C:\\Users\\pekar\\OneDrive\\Pulpit\\git\\CarRent\\client\\src\\components\\UserComponent.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n  <div >{{data}}</div>\n  </div>\n</template>\n\n<script>\nimport UserService from '../UserService'\nexport default {\n  name: 'UserComponent',\n  data () {\n    return{\n      data:[],\n      name:'',\n      surname:'',\n      password:'',\n      error:''\n  }\n},\n  async created() {\n    try{\n    this.data=await UserService.getUser();}\n    catch(err){\n      this.error=err.message;\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style >\n\n</style>\n"]},"metadata":{},"sourceType":"module"}