{"ast":null,"code":"import axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nconst url = 'http://localhost:3000/api/users';\n\nclass UserService {\n  static GetUser(id) {\n    return;\n  } //get posts\n\n\n  static decode(token) {\n    var decoded = jwt_decode(token);\n    return decoded;\n  }\n\n  static getPosts() {\n    return new Promise((resolve, reject) => {\n      axios.get(url).then(res => {\n        resolve(res.data.body);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  static register(email, password) {\n    return axios.post(url + '/registration', {\n      email,\n      password\n    }).then(res => {\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err.data);\n    });\n  }\n\n  static login(email, password) {\n    return axios.post(url + \"/login\", {\n      email,\n      password\n    }).then(res => {\n      return res;\n    }).catch(err => {\n      return err;\n    });\n  }\n\n}\n\nexport default UserService;","map":{"version":3,"sources":["C:/Users/pekar/OneDrive/Pulpit/git/CarRent/client/src/UserService.js"],"names":["axios","jwt_decode","url","UserService","GetUser","id","decode","token","decoded","getPosts","Promise","resolve","reject","get","then","res","data","body","catch","err","register","email","password","post","console","log","login"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,MAAMC,GAAG,GAAC,iCAAV;;AACA,MAAMC,WAAN,CAAiB;AACC,SAAPC,OAAO,CAACC,EAAD,EAAI;AACd;AACH,GAHY,CAIb;;;AACa,SAANC,MAAM,CAACC,KAAD,EAAO;AAChB,QAAIC,OAAO,GAAGP,UAAU,CAACM,KAAD,CAAxB;AACA,WAAOC,OAAP;AACH;;AACc,SAARC,QAAQ,GAAG;AACd,WAAO,IAAIC,OAAJ,CAAa,CAACC,OAAD,EAASC,MAAT,KAAoB;AACpCZ,MAAAA,KAAK,CAACa,GAAN,CAAUX,GAAV,EAAeY,IAAf,CAAqBC,GAAD,IAAQ;AACxBJ,QAAAA,OAAO,CAACI,GAAG,CAACC,IAAJ,CAASC,IAAV,CAAP;AACH,OAFD,EAGCC,KAHD,CAGQC,GAAD,IAAQ;AACXP,QAAAA,MAAM,CAACO,GAAD,CAAN;AACH,OALD;AAOH,KARM,CAAP;AASH;;AACc,SAARC,QAAQ,CAACC,KAAD,EAAOC,QAAP,EAAgB;AAC3B,WAAOtB,KAAK,CAACuB,IAAN,CAAWrB,GAAG,GAAC,eAAf,EAA+B;AAACmB,MAAAA,KAAD;AAAOC,MAAAA;AAAP,KAA/B,EACNR,IADM,CACAC,GAAD,IAAO;AACTS,MAAAA,OAAO,CAACC,GAAR,CAAYV,GAAG,CAACC,IAAhB;AACH,KAHM,EAGJE,KAHI,CAGGC,GAAD,IAAS;AACdK,MAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACH,IAAhB;AACH,KALM,CAAP;AAMH;;AACW,SAALU,KAAK,CAACL,KAAD,EAAOC,QAAP,EAAgB;AACpB,WAAOtB,KAAK,CAACuB,IAAN,CAAWrB,GAAG,GAAC,QAAf,EACH;AAACmB,MAAAA,KAAD;AAAOC,MAAAA;AAAP,KADG,EAELR,IAFK,CAECC,GAAD,IAAO;AAEX,aAAOA,GAAP;AACF,KALM,EAKJG,KALI,CAKGC,GAAD,IAAS;AACd,aAAOA,GAAP;AACH,KAPM,CAAP;AAQP;;AArCY;;AAyCjB,eAAehB,WAAf","sourcesContent":["import axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\"\r\nconst url='http://localhost:3000/api/users'\r\nclass UserService{\r\n    static GetUser(id){\r\n        return \r\n    }\r\n    //get posts\r\n    static decode(token){\r\n        var decoded = jwt_decode(token);\r\n        return decoded;\r\n    }\r\n    static getPosts() {\r\n        return new Promise ((resolve,reject) => {\r\n            axios.get(url).then((res) =>{\r\n                resolve(res.data.body)\r\n            })\r\n            .catch((err)=> {\r\n                reject(err);\r\n            })\r\n            \r\n        });\r\n    }\r\n    static register(email,password){\r\n        return axios.post(url+'/registration',{email,password})\r\n        .then((res)=>{\r\n            console.log(res.data);\r\n        }).catch((err) => {\r\n            console.log(err.data)\r\n        })\r\n    }\r\n    static login(email,password){\r\n            return axios.post(url+\"/login\",\r\n                {email,password}\r\n            ).then((res)=>{\r\n               \r\n               return res\r\n            }).catch((err) => {\r\n                return err                \r\n            })\r\n    }\r\n    \r\n}\r\n\r\nexport default UserService\r\n\r\n"]},"metadata":{},"sourceType":"module"}