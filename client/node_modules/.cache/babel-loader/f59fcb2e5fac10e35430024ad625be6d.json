{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"input\", {\n    onC: _cache[0] || (_cache[0] = () => {})\n  }, null, 32\n  /* HYDRATE_EVENTS */\n  );\n}","map":{"version":3,"mappings":";;uBACAA,oBAAU,OAAV,EAAU;AAAFC,OAAC,4BAAF,OAAE;AAAC,GAAV;;AAAA","names":["_createElementBlock","onC"],"sourceRoot":"","sources":["C:\\Users\\pekar\\OneDrive\\Pulpit\\git\\CarRent\\client\\src\\components\\UserComponent.vue"],"sourcesContent":["<template>\n<input @c>\n</template>\n\n<script>\nimport UserService from '../UserService'\nexport default {\n  name: 'UserComponent',\n  data () {\n    return{\n      name:'',\n      surname:'',\n      password:'',\n      error:''\n  }\n},\n  async created() {\n    try{\n    this.data=await UserService.getUser();}\n    catch(err){\n      this.error=err.message;\n    }\n  },\n  methods:{\n  async CreateUser(){\n    await UserService.insertUsers(this.name)\n    \n\n  }\n  \n}\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style >\n\n</style>\n"]},"metadata":{},"sourceType":"module"}