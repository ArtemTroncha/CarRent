{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"input\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"v-model \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _hoisted_2, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.CreateUser && $options.CreateUser(...args))\n  }, \"Tap\")], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCACAA,oBAAQ,OAAR,EAAQ,IAAR,EAAQ,IAAR,EAAQ;AAAA;AAAR;;iDAAQ;;;6DAARC,wBACAD,oBAAwC,QAAxC,EAAwC;AAA/BE,WAAK,yCAAEC,mDAAF;AAA0B,GAAxC,EAA4B,KAA5B","names":["_createElementVNode","_hoisted_1","onClick","$options"],"sourceRoot":"","sources":["C:\\Users\\pekar\\OneDrive\\Pulpit\\git\\CarRent\\client\\src\\components\\UserComponent.vue"],"sourcesContent":["<template>\n<input >v-model\n<button @click=\"CreateUser\">Tap</button>\n\n</template>\n\n<script>\nimport UserService from '../UserService'\nexport default {\n  name: 'UserComponent',\n  data () {\n    return{\n      name:'',\n      surname:'',\n      password:'',\n      error:''\n  }\n},\n  async created() {\n    try{\n    this.data=await UserService.getUser();}\n    catch(err){\n      this.error=err.message;\n    }\n  },\n  methods:{\n  async CreateUser(){\n    await UserService.insertUsers(this.name) \n  }\n  \n}\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style >\n\n</style>\n"]},"metadata":{},"sourceType":"module"}