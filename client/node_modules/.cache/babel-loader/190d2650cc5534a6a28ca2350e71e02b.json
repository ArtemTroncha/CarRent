{"ast":null,"code":"import axios from \"axios\";\nconst url = 'http://localhost:3000/api/users';\n\nclass UserService {\n  //get posts\n  static getPosts() {\n    return new Promise((resolve, reject) => {\n      axios.get(url).then(res => {\n        const data = res.data;\n        resolve(data.body);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  static register(new_email, new_password) {\n    return axios({\n      method: 'post',\n      url: url + '/registration',\n      data: {\n        email: new_email,\n        password: new_password\n      },\n      headers: {\n        content\n      }\n    });\n  }\n\n  static login(email, password) {\n    return axios.post(url + \"/login\", {\n      email,\n      password\n    });\n  }\n\n}\n\nexport default UserService;","map":{"version":3,"sources":["C:/Users/pekar/OneDrive/Pulpit/git/CarRent/client/src/UserService.js"],"names":["axios","url","UserService","getPosts","Promise","resolve","reject","get","then","res","data","body","catch","err","register","new_email","new_password","method","email","password","headers","content","login","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,GAAG,GAAC,iCAAV;;AACA,MAAMC,WAAN,CAAiB;AACb;AACe,SAARC,QAAQ,GAAG;AACd,WAAO,IAAIC,OAAJ,CAAa,CAACC,OAAD,EAASC,MAAT,KAAoB;AACpCN,MAAAA,KAAK,CAACO,GAAN,CAAUN,GAAV,EAAeO,IAAf,CAAqBC,GAAD,IAAS;AACzB,cAAMC,IAAI,GAACD,GAAG,CAACC,IAAf;AACAL,QAAAA,OAAO,CAACK,IAAI,CAACC,IAAN,CAAP;AACH,OAHD,EAICC,KAJD,CAIQC,GAAD,IAAQ;AACXP,QAAAA,MAAM,CAACO,GAAD,CAAN;AACH,OAND;AAQH,KATM,CAAP;AAUH;;AACc,SAARC,QAAQ,CAACC,SAAD,EAAWC,YAAX,EAAwB;AACnC,WAAOhB,KAAK,CAAC;AACTiB,MAAAA,MAAM,EAAC,MADE;AAEThB,MAAAA,GAAG,EAACA,GAAG,GAAC,eAFC;AAGTS,MAAAA,IAAI,EAAC;AACDQ,QAAAA,KAAK,EAACH,SADL;AAEDI,QAAAA,QAAQ,EAACH;AAFR,OAHI;AAOTI,MAAAA,OAAO,EAAC;AAACC,QAAAA;AAAD;AAPC,KAAD,CAAZ;AAUH;;AACW,SAALC,KAAK,CAACJ,KAAD,EAAOC,QAAP,EAAgB;AACpB,WAAOnB,KAAK,CAACuB,IAAN,CAAWtB,GAAG,GAAC,QAAf,EAAwB;AAC/BiB,MAAAA,KAD+B;AACzBC,MAAAA;AADyB,KAAxB,CAAP;AAGP;;AA9BY;;AAiCjB,eAAejB,WAAf","sourcesContent":["import axios from \"axios\";\r\nconst url='http://localhost:3000/api/users'\r\nclass UserService{\r\n    //get posts\r\n    static getPosts() {\r\n        return new Promise ((resolve,reject) => {\r\n            axios.get(url).then((res) => {\r\n                const data=res.data;\r\n                resolve(data.body)\r\n            })\r\n            .catch((err)=> {\r\n                reject(err);\r\n            })\r\n            \r\n        });\r\n    }\r\n    static register(new_email,new_password){\r\n        return axios({\r\n            method:'post',\r\n            url:url+'/registration',\r\n            data:{\r\n                email:new_email,\r\n                password:new_password\r\n            },\r\n            headers:{content}\r\n        }\r\n        )     \r\n    }\r\n    static login(email,password){\r\n            return axios.post(url+\"/login\",{\r\n            email,password}\r\n            )\r\n    }\r\n}\r\n\r\nexport default UserService\r\n\r\n"]},"metadata":{},"sourceType":"module"}